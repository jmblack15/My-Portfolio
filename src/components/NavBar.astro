---
const navBarLinks = [
  { href: "#home", label: "Home" },
  { href: "#about", label: "About" },
  { href: "#skills", label: "Skills" },
  { href: "#work", label: "My Work" },
  { href: "#contac", label: "Contact" },
];
---

<header class="stiky top-0 z-50">
  <nav
    class="border-gray-200 bg-[#1B1B1B]"
    role="navigation"
    aria-label="Main navigation"
  >
    <div
      class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4"
    >
      <div class="flex items-center space-x-3 rtl:space-x-reverse">
        <!-- <img src="https://flowbite.com/docs/images/logo.svg" class="h-8" alt="Flowbite Logo" /> -->
        <span
          class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white"
          >My portfolio</span
        >
      </div>
      <button
        data-collapse-toggle="navbar-default"
        type="button"
        class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
        aria-controls="navbar-default"
        aria-expanded="false"
      >
        <span class="sr-only">Open main menu</span>
        <svg
          class="w-5 h-5"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 17 14"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M1 1h15M1 7h15M1 13h15"></path>
        </svg>
      </button>
      <div
        class="hidden fixed inset-0 z-50 bg-[#1B1B1B] transform translate-x-full transition-transform duration-300 ease-in-out md:static md:translate-x-0 md:flex md:flex-row md:items-center md:justify-end md:w-auto md:h-auto md:bg-transparent md:dark:bg-transparent"
        id="navbar-default"
      >
        <button
          id="close-menu"
          class="button_close_menu absolute top-6 right-6 text-white md:hidden"
          aria-label="Cerrar menú"
        >
          ✕
        </button>
        <ul
          class="font-medium flex flex-col p-4 md:p-0 mt-4 rounded-lg md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0"
        >
          {
            navBarLinks.map((link) => (
              <li>
                <a
                  href={link.href}
                  class="block py-2 px-3 text-whiterounded-sm md:bg-transparent md:text-blue-700 md:p-0 dark:text-white "
                  aria-current="page"
                >
                  {link.label}
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </nav>
</header>

<style>
  .button_close_menu {
    font-size: 30px;
  }
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const toggleBtn = document.querySelector(
      '[data-collapse-toggle="navbar-default"]'
    );
    const navMenu = document.getElementById("navbar-default");
    const closeBtn = document.getElementById("close-menu");
    const navLinks = document.querySelectorAll("nav a");

    toggleBtn?.addEventListener("click", () => {
      navMenu?.classList.remove("hidden");
      setTimeout(() => {
        navMenu?.classList.remove("translate-x-full");
      }, 10);
    });

    const closeMenu = () => {
      navMenu?.classList.add("translate-x-full");
      setTimeout(() => {
        navMenu?.classList.add("hidden");
      }, 300);
    };

    closeBtn?.addEventListener("click", closeMenu);

    navLinks.forEach((link) => {
      link.addEventListener("click", () => {
        if (window.innerWidth < 768) {
          closeMenu();
        }
      });
    });

    const sections = document.querySelectorAll("section[id]");

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const id = entry.target.getAttribute("id");
          const link = document.querySelector(`nav a[href="#${id}"]`);

          if (entry.isIntersecting) {
            navLinks.forEach((a) => {
              a.classList.remove("bg-blue-700", "text-white");
              a.classList.add("text-gray-900", "dark:text-white");
            });
            link?.classList.add("bg-blue-700", "text-white");
            link?.classList.remove("text-gray-900", "dark:text-white");
          }
        });
      },
      {
        rootMargin: "-40% 0px -55% 0px",
        threshold: 0.1,
      }
    );

    sections.forEach((section) => observer.observe(section));
  });
</script>
